name: Release Pipeline

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  comprehensive-test:
    name: Comprehensive Testing (Release)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.2', '8.3']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader --no-dev

      - name: Install dev dependencies for testing
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Validate composer files
        run: composer validate --strict

      - name: Security audit
        run: composer audit

      - name: Run PHPUnit with Coverage
        run: XDEBUG_MODE=coverage ./vendor/bin/phpunit --coverage-clover coverage/clover.xml --coverage-text

      - name: Run Behat Tests
        run: ./vendor/bin/behat --format=progress --strict

      - name: Verify 100% Code Coverage (Critical for Release)
        run: php bin/check-coverage.php

      - name: Test production autoloader
        run: |
          composer install --no-dev --optimize-autoloader
          php -r "require 'vendor/autoload.php'; echo 'Autoloader OK' . PHP_EOL;"

  package-integrity:
    name: Package Integrity Check
    runs-on: ubuntu-latest
    needs: comprehensive-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Create distribution package
        run: |
          # Create a clean copy without dev dependencies
          mkdir -p dist
          cp -r src dist/
          cp composer.json dist/
          cp composer.lock dist/
          cp README.md dist/
          cp LICENSE dist/ 2>/dev/null || echo "No LICENSE file found"

      - name: Test package installation
        run: |
          cd dist
          composer install --no-dev --optimize-autoloader
          php -r "
            require 'vendor/autoload.php';
            if (class_exists('GryfOSS\\\\Mvc\\\\Normalizer\\\\DefaultViewModelNormalizer')) {
              echo '✅ Package classes loadable' . PHP_EOL;
            } else {
              echo '❌ Package classes not loadable' . PHP_EOL;
              exit(1);
            }
          "

      - name: Archive distribution package
        uses: actions/upload-artifact@v4
        with:
          name: distribution-package
          path: dist/
          retention-days: 90

  release-validation:
    name: Release Validation
    runs-on: ubuntu-latest
    needs: [comprehensive-test, package-integrity]
    if: github.event_name == 'release'

    steps:
      - name: Validate Release
        run: |
          echo "✅ All release checks passed!"
          echo "Tag: ${{ github.ref_name }}"
          echo "Release: ${{ github.event.release.tag_name }}"
          echo "Package is ready for distribution"
